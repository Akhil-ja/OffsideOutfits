<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Offside Outfits</title>
    <meta name="keywords" content="HTML5 Template">
    <meta name="description" content="Molla - Bootstrap eCommerce Template">
    <meta name="author" content="p-themes">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href=" /productAssets/User-icon.svg">
    <!-- Plugins CSS File -->
    <link rel="stylesheet" href="assets/css/bootstrap.min.css">
    <!-- Main CSS File -->
    <link rel="stylesheet" href="assets/css/style.css">
    <link rel="stylesheet" href="assets/css/plugins/owl-carousel/owl.carousel.css">
    <link rel="stylesheet" href="assets/css/plugins/magnific-popup/magnific-popup.css">
    <link rel="stylesheet" href="assets/css/plugins/nouislider/nouislider.css">
    

<link href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" rel="stylesheet">


<style>
    /* CSS for adjusting the width and height of the invoice popup */
    #invoicePopup-window {
        position: fixed;
        z-index: 100;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 20px;
        max-width: 90%;
        max-height: 90%;
        overflow: auto;
    }

    /* Media query for smaller screens */
    @media (max-width: 768px) {
        #invoicePopup-window {
            width: 90%;
            height: 90%;
        }
    }
</style>

    <style>
        .cancel-button-button,
        .confirm-button,
        .confirm-cancel {
            background-color: #fff;
            color: #000000;
            border: 1px solid #606060;
            padding: 5px 5px;
            border-radius: 5px;
            cursor: pointer;
            width: 210px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

        }


        .return-button-button,
        .confirm-button,
        .confirm-return {
            background-color: #fff;
            color: #000000;
            border: 1px solid #606060;
            padding: 5px 5px;
            border-radius: 5px;
            cursor: pointer;
            width: 210px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

        }

         .actions button:hover,
        .return-button-button:hover,
        .confirm-button:hover,
        .confirm-return:hover {
            background-color: orangered;
            color: #fff;
             transition: background-color 0.3s, color 0.3s;
        }

        .actions button:hover,
        .cancel-button-button:hover,
        .confirm-button:hover,
        .confirm-cancel:hover {
            background-color: red;
            color: #fff;
        }

        .popup {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 10000;
        }

        .popup-content {
            background-color: white;
            width: 400px;
            padding: 20px;
            border-radius: 10px;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
             z-index: 10000;
        }
 .reason {
            margin-left: 10px;
        }
.form-row {
            display: inline-block;
            margin-bottom: 10px;
            /* Adjust as needed */
        }
        .option-list {
            display: inline-block;
            vertical-align: top;
            /* Align select with the top of the label */
        }

        .option-list select {
            border: 1px solid #ccc;
            /* Adjust border properties as needed */
            padding: 5px;
            /* Optional: Adjust padding for better visual appearance */
            box-sizing: border-box;
            /* Ensure padding is included in the width */
        }
    </style>

<style>
    .returnPopUp {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 10000;
    }

    .popup-content {
        background-color: white;
        width: 400px;
        padding: 20px;
        border-radius: 10px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10000;
    }

    .reason {
        margin-left: 10px;
    }

    .form-row {
        display: inline-block;
        margin-bottom: 10px;
        /* Adjust as needed */
    }

    .option-list {
        display: inline-block;
        vertical-align: top;
        /* Align select with the top of the label */
    }

    .option-list select {
        border: 1px solid #ccc;
        /* Adjust border properties as needed */
        padding: 5px;
        /* Optional: Adjust padding for better visual appearance */
        box-sizing: border-box;
        /* Ensure padding is included in the width */
    }

    .confirm-button {
        background-color: #fff;
        color: #000000;
        border: 1px solid #606060;
        padding: 5px 5px;
        border-radius: 5px;
        cursor: pointer;
        width: 60px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .confirm-action {
        background-color: #fff;
        color: #000000;
        border: 1px solid #606060;
        padding: 5px 5px;
        border-radius: 5px;
        cursor: pointer;
        width: 150px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .confirm-button:hover,
    .confirm-action:hover {
        background-color: orangered;
        color: #fff;
        transition: background-color 0.3s, color 0.3s;
    }
</style>


</head>

<body>
    <div class="page-wrapper">
        <header class="header ">
            <div class="header-middle">
                <div class="header-top">
                    <div class="container-fluid">
                        <div class="header-left m-4">

                        </div><!-- End .header-left -->

                        <div class="header-right">
                            <ul class="top-menu">
                               
                            </ul><!-- End .top-menu -->
                        </div><!-- End .header-right -->
                    </div><!-- End .container-fluid -->
                </div><!-- End .header-top -->

                <div class="header-middle ">
                    <div class="container-fluid">
                        <div class="header-left">


                            <a href="/home" class="logo">
                                <img src="assets/images/Logo1.png" alt="Molla Logo" width="50" height="25">
                            </a>

                        <nav class="main-nav">
                            <ul class="menu sf-arrows">
                                <li class="megamenu-container ">
                                    <a href="/home" class="">Home</a>
                                </li>
                                <li class="">
                                    <a href="" class=" ">Shop</a>
                                </li>
                            </ul>
                        </nav>
                        </div><!-- End .header-left -->

                        <div class="header-right">

                            

                        <a href="/wishlist" class="wishlist-link">
                            <i class="icon-heart-o"></i>
                        </a>

                            <div class="cart-dropdown position-relative">
                                <a href="/cart" class="dropdown-toggle" role="button"
                                    style="position: relative; display: inline-block;">
                                    <i class="icon-shopping-cart">
                                        <span hidden class="badge badge-danger"
                                            style="position: absolute; top: 0; right: 0; font-size: 10px; padding: 2px 5px;">Cart
                                            count</span>
                                    </i>
                                </a>
                            </div>



                            <div class=" cart-dropdown">
                                <a href="/profile" class="dropdown-toggle" role="button" aria-haspopup="true"
                                    aria-expanded="false" data-display="static">
                                    <i class="icon-user"> </i>

                                </a>
                            </div>

                        </div><!-- End .header-right -->
                    </div><!-- End .container-fluid -->
                </div><!-- End .header-middle -->
            </div>
        </header><!-- End .header -->



        <!-- order-details.ejs -->
        
    <!-- order-details.ejs -->
    
<main class="main">



<a  type="submit" id="invoicePopup" class="return-button-button mr-3 mt-3 rounded-pill"
    style="width: 100px; float: right;">
    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="16" fill="currentColor" class="bi bi-download"
        viewBox="0 0 16 16">
        <path
            d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
        <path
            d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z" />
    </svg>
    Invoice
</a>

<div id="invoicePopup-window" class="py-3 py-md-5" style="display: none;">
    <div>
        <span type="button" onclick="closePopup()" style='font-size:10px;' title="Close">&#10060;</span>
    </div>
    <div style="margin-left: 950px;">
        <a type="submit" id="invoiceDownload" style="border-style: none;" title="Download">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512" width="36" height="36">
                <!-- Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc. -->
                <path
                    d="M144 480C64.5 480 0 415.5 0 336c0-62.8 40.2-116.2 96.2-135.9c-.1-2.7-.2-5.4-.2-8.1c0-88.4 71.6-160 160-160c59.3 0 111 32.2 138.7 80.2C409.9 102 428.3 96 448 96c53 0 96 43 96 96c0 12.2-2.3 23.8-6.4 34.6C596 238.4 640 290.1 640 352c0 70.7-57.3 128-128 128H144zm79-167l80 80c9.4 9.4 24.6 9.4 33.9 0l80-80c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-39 39V184c0-13.3-10.7-24-24-24s-24 10.7-24 24V318.1l-39-39c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9z" />
            </svg>
        </a>
    </div>
    <div id="invoice_download" class="container">
        <div class="row justify-content-center">
            <div id="setA4size" class="col-12 col-lg-9 col-xl-8 col-xxl-7"
                style=" margin-top: 120px; margin-left: 10px; margin-right: 10px;">
                <div class="row gy-3 mb-3">
                    <div class="col-6">
                        <h2 class="text-uppercase text-endx m-0">Invoice</h2>
                    </div>
                    <div class="col-6">
                        <a class="d-block text-end" href="#!">
                            <img src="assets\images\Logo1.png"   class="img-fluid" alt="BootstrapBrain Logo"
                                width="120" height="35">
                        </a>
                    </div>
                    <div class="col-12">
                        <h4>From</h4>
                        <address>
                            <strong style="font-size: x-large;font-weight: 700;">OffsideOutfits</strong><br>
                            
                        </address>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-12 col-sm-6 col-md-8">
                        <h4>Bill To</h4>
                        <address>
                            <strong>
                                <%= orderDetails.address.AddName %>
                            </strong><br>
                            <%= orderDetails.address.House %>, <%= orderDetails.address.street %><br>
                                    <%= orderDetails.address.city %>, <%= orderDetails.address.state %>,
                                            <%= orderDetails.address.PIN %><br>
                                               
                                                   
                        </address>
                    </div>
                    <div class="col-12 col-sm-6 col-md-4">
                        <h4 class="row">
                            <span class="col-6">Order ID</span>    
                            <span class="col-6 text-sm-end">
                            #<%= orderDetails.orderID %>
                            </span>
                        </h4>
                        <div class="row">
                            
                            <span class="col-6">Invoice Date</span>
                            <span class="col-6 text-sm-end" id="currentDate"></span>
                            <span class="col-6">Payment</span>
                            <span class="col-6 text-sm-end">
                                <%= orderDetails.PaymentMethod %>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="table-responsive">

                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col" class="text-uppercase">Product</th>
                                <th scope="col" class="text-uppercase">Qty</th>
                                <th scope="col" class="text-uppercase">Size</th>
                                <th scope="col" class="text-uppercase text-end">Unit Price</th>
                                <th scope="col" class="text-uppercase text-end">Amount</th>
                            </tr>
                        </thead>
                        <tbody class="table-group-divider">
                            <% orderDetails.products.forEach(product=> { %>
                                <tr>
                                    <td>
                                        <%= product.product.pname %>
                                    </td>
                                    <td scope="row">
                                        <%= product.quantity %>
                                    </td>
                                    <td>
                                        <%= product.size %>
                                    </td>
                                    <td class="text-end">
                                        <%= product.price.toFixed(2) %>
                                    </td>
                                    <td class="text-end">
                                        <%= product.price.toFixed(2) * product.quantity %>
                                    </td>
                                </tr>
                                <% }) %>
                                    <tr>
                                        <td colspan="4" class="text-end">Subtotal</td>
                                        <td class="text-end">
                                           <p style="text-decoration: underline;"><%= orderDetails.orderTotal.toFixed(2) %> Rs/-</p>
                                        </td>
                                    </tr>
                        </tbody>
                    </table>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



    <div class="container">
        <div id="invoice">
        <h1 class="title mb-3 mt-1" style="text-decoration: underline;font-size: xx-large;">Order Details</h1>
        <h10 class=" mb-3" style="font-size: small;"> <b>Order Id: </b><%=orderDetails.orderID%></h10>

        <div class="card mb-3">
          
            <div class="card-body">
                <h4 class="card-title">Order Placed Date: <%= orderDetails.orderDate.toLocaleDateString() %>
                </h4>
                <h4 class="card-title">Status:
                    <span class="badge <%= orderDetails.status === 'pending' ? 'badge-primary' :
                                        orderDetails.status === 'completed' ? 'badge-success' :
                                        orderDetails.status === 'returned' ? 'badge-warning' :
                                        orderDetails.status === 'cancelled' ? 'badge-danger' :
                                        orderDetails.status === 'delivered' ? 'badge-info' :
                                        'badge-secondary' %>">
                        <%= orderDetails.status %>
                    </span>
                </h4>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-body">
                <h4 class="card-title">Shipping Address</h4>
                <div class="mb-3 mt-1">
                    <strong>
                        <%= orderDetails.address.AddName %>
                    </strong><br>
                    <%= orderDetails.address.House %>, <%= orderDetails.address.street %><br>
                            <%= orderDetails.address.city %>, <%= orderDetails.address.state %>
                                    <%= orderDetails.address.PIN %>
                </div>
            </div>
        </div>

        <h4 class="card-title">Ordered Products</h4>

    <% if (orderDetails.productEdited===true) { %>
        <div class="alert" role="alert" style="color: red;">
            The product prices have been changed since you placed your order.
        </div>
        <% } %>

        
       
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered text-center">
                        <thead>
                            <tr>
                                <th scope="col" class="font-weight-bold">Product Image</th>
                                <th scope="col" class="font-weight-bold">Product Name</th>
                                <th scope="col" class="font-weight-bold">Size</th>
                                <th scope="col" class="font-weight-bold">Quantity</th>
                                <th scope="col" class="font-weight-bold">Price per Unit</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orderDetails.products.forEach(productInfo=> { %>
                                <tr>
                                    <td class="align-middle">
                                        <img  src="/productAssets/<%= productInfo.product.images[0] %>" alt="Product Image"
                                            style="width: 100px; height: 100px; margin-left: 70px;">
                                    </td>
                                    <td class="align-middle">
                                        <%= productInfo.product.pname %>
                                    </td>
                                    <td class="align-middle">
                                        <%= productInfo.size %>
                                    </td>
                                    <td class="align-middle">
                                        <%= productInfo.quantity %>
                                    </td>

                                    <% if (orderDetails.status==='payment failed' ) { %>
                                    <td class="align-middle">Rs <%= productInfo.product.priceAfterDiscount.toFixed(2) %>
                                      <% }else{%>
                                        <td class="align-middle">Rs <%= productInfo.price.toFixed(2) %>
                                        </td>

                                    <%  } %>

                                    

                                    
                                    </td>
                                </tr>
                                <% }); %>

                                
                        </tbody>
                    </table>


                </div>
            </div>
        </div>
<% if (orderDetails.couponApplied) { %>
    <div class="card mt-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered text-center">
                    <h6 class="mt-4">Coupon Applied</h6>
                    <thead>
                        <tr>
                            <th scope="col" class="font-weight-bold">Coupon Name</th>
                            <th scope="col" class="font-weight-bold">Discount Type</th>
                            <th scope="col" class="font-weight-bold">Discount Value</th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            
                            <td>
                                <%= orderDetails.couponApplied.name %>
                            </td>
                            <td>
                                <%= orderDetails.couponApplied.discountType %>
                            </td>
                            <td>
                                <%= orderDetails.couponApplied.discountValue %>
                            </td>
                           
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <% } %>
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Total Amount</h4>
                <p class="card-text" style="font-weight: 600;text-decoration: underline;">
                    Rs: <%=orderDetails.orderTotal.toFixed(2) %>/-
                </p>
            </div>
                </div>
                </div>

        <div class="cancel-button">
            <% if (orderDetails.status==="pending" ) { %>
                <button onclick="showPopup()" class="cancel-button-button" style="float: right;">Cancel Order</button>
                <% } else if (orderDetails.status==="delivered" ) { %>
                    <button class="return-button-button" onclick="showReturnPopup()" style="float: right;">Return this
                        Order</button>
                    <% } %>
        </div>
        
        <div id="popup" class="popup">
            <div class="popup-content">
                <div class="main-pcontent">
                    <div class="reason" style="display: flex; flex-direction: column;">
                        <p>Are you sure you want to cancel this delivery?</p>
                        <div class="form-row">
                            <div class="option-list">
                                <select id="reason" name="reason" onchange="checkReason()">
                                    <option selected hidden disabled value="">Reason for Cancellation</option>
                                    <option value="delay delivery">Delayed delivery</option>
                                    <option value="wrong item">Wrong item</option>
                                    <option value="changed mind">Changed mind</option>
                                    <option value="Did't liked">Did't like</option>

                                    <option value="others">Other</option>
                                </select>
                            </div>
                        </div>
                        
                    </div>
                </div>
                <br>
                <br>
                <div style="display: flex; justify-content:end; gap: 15px;">
                    <button class="confirm-button" style="width: 60px;" onclick="closePopup()">Close</button>
                    <button class="confirm-cancel" id="confirm-cancel" data-order-id="<%= orderDetails._id %>">Confirm
                        Cancellation</button>
                </div>
            </div>
        </div>
        
        <div id="returnPopUp" class="returnPopUp" style="display: none;">
            <div class="popup-content">
                <div class="main-pcontent">
                    <div class="reason" style="display: flex; flex-direction: column;">
                        <p>Are you sure you want to return this order?</p>
                        <div class="form-row">
                            <div class="option-list">
                                <select id="returnReason" name="returnReason" onchange="checkReturnReason()">
                                    <option selected hidden disabled value="">Reason for Return</option>
                                    <option value="defective">Defective product</option>
                                    <option value="not-needed">Not needed anymore</option>
                                    <option value="Wrong Size">Not correct Size</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                        </div>
                        
                        
                    </div>
                </div>
                <br>
                <br>
                <div style="display: flex; justify-content:end; gap: 15px;">
                    <button class="confirm-button" style="width: 60px;" onclick="closereturnPopup()">Close</button>
                    <button class="confirm-action" id="confirm-return" data-order-id="<%= orderDetails._id %>">Confirm
                        Return</button>
                </div>
            </div>
        </div>

    
        

        
        <a href="/profile?selected=orders" class="btn btn-secondary m-5">Back</a>
        
        <% if (orderDetails.status==='payment failed') { %>
            <button style="background-color: orangered;" class="btn btn-outline-dark btn-round"
                onclick="completePayment('<%= orderDetails._id %>')">Complete Payment</button>
    
    <% } %>
       
        </div>
</main>








    <footer class="footer footer-2">
        <div class="footer-middle">
            <div class="container">
                <div class="row justify-content-center"> <!-- Center aligning content -->
                    <div class="col-md-6">
                        <div class="widget widget-about text-center"> <!-- Center aligning content -->
                            <img style="margin-left: 120px;" src="assets/images/LogoFooter.png" class="footer-logo"
                                alt="Footer Logo" width="280" height="25">
                            <p>Offside Outfit is your premier destination for football jerseys, catering to the passion of
                                fans worldwide.
                                With a curated collection of high-quality gear representing teams from various leagues. Our
                                commitment to excellence ensures that every
                                garment is crafted with premium materials, guaranteeing comfort and durability on and off
                                the pitch.</p>
                        </div><!-- End .widget-about -->
                    </div><!-- End .col-md-6 -->
                </div><!-- End .row -->
            </div><!-- End .container -->
        </div><!-- End .footer-middle -->
    
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <p class="footer-copyright text-center">Copyright &copy; 2024 Offside Outfits. All Rights Reserved.
                        </p>
                    </div><!-- End .col-md-12 -->
                </div><!-- End .row -->
            </div><!-- End .container -->
        </div><!-- End .footer-bottom -->
    </footer>
        </div><!-- End .page-wrapper -->
        <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

        <script src="assets/js/jquery.min.js"></script>
        <script src="assets/js/bootstrap.bundle.min.js"></script>
        <script src="assets/js/jquery.hoverIntent.min.js"></script>
        <script src="assets/js/jquery.waypoints.min.js"></script>
        <script src="assets/js/superfish.min.js"></script>
        <script src="assets/js/owl.carousel.min.js"></script>
        <script src="assets/js/wNumb.js"></script>
        <script src="assets/js/bootstrap-input-spinner.js"></script>
        <script src="assets/js/jquery.magnific-popup.min.js"></script>
        <script src="assets/js/nouislider.min.js"></script>
        <!-- Main JS File -->
        <script src="assets/js/main.js"></script>
        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
        
        
    

<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.3/jspdf.umd.min.js"></script>
<script type="text/javascript" src="https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.4.1/jspdf.debug.js"></script>
<script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>





<script>

    function setDefaultType(addressId) {
        fetch(`/set-default-address/${addressId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
        })
            .then(response => response.json())
            .then(result => {
                console.log(result);
                Swal.fire({
                    icon: "success",
                    title: "Success!",
                    text: "Address type set to default.",
                });
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }


</script>



<script>
    function checkReason() {
        var selectElement = document.getElementById("reason");
       
    }

    function showPopup() {
        document.getElementById('popup').style.display = 'block';
    }

     function showReturnPopup() {
            document.getElementById('returnPopUp').style.display = 'block';
        }

    function closePopup() {
        document.getElementById('popup').style.display = 'none';
    }

      function closereturnPopup() {
            document.getElementById('returnPopUp').style.display = 'none';
        }

    document.querySelectorAll('.confirm-cancel').forEach(button => {
        button.addEventListener('click', function () {
            const orderId = this.getAttribute('data-order-id');
            confirmCancellation(orderId);
        });
    });

    function confirmCancellation(orderId) {
        let reason = document.getElementById("reason").value;
       

        if (!reason) {
            Toastify({
                text: 'Select Reason for Cancellation',
                duration: 3000,
                gravity: 'top', 
                position: 'center',
                backgroundColor: '#ffa500',
                className: 'toastify-info'
            }).showToast();
            return;
        }

        
        fetch('/cancel-order?orderId=<%=orderDetails._id %>', {
            method: 'POST',
            body: JSON.stringify({ orderId: orderId, reason: reason }),
            headers: {
                'Content-Type': 'application/json',
            }
        }).then(response => {
            console.log("Order cancelled db and response came");
            if (response.ok) {
                sessionStorage.setItem('orderCancelled', 'true');
                window.location.reload();
            } else if (response.status === 404 || response.status === 405) {
                Toastify({
                    text: 'Missing orderId details.',
                    duration: 3000,
                    gravity: 'top', 
                    position: 'center', 
                    backgroundColor: 'red',
                    className: 'toastify-error'
                }).showToast();
            } else if (response.status === 406) {
                Toastify({
                    text: 'Missing order cancellation reason.',
                    duration: 3000,
                    gravity: 'top', 
                    position: 'center', 
                    backgroundColor: 'red',
                    className: 'toastify-error'
                }).showToast();
            } else {
                Toastify({
                    text: 'Order Cancellation Failed',
                    duration: 3000,
                    gravity: 'top', 
                    position: 'center', 
                    backgroundColor: 'red',
                    className: 'toastify-error'
                }).showToast();
            }
        });

        closePopup();
    }
</script>

<script>
    window.onload = function () {
        if (sessionStorage.getItem('orderCancelled')) {
            Toastify({
                text: 'Order Cancelled',
                duration: 4000,
                gravity: 'top',
                position: 'center', 
                backgroundColor: 'green',
                className: 'toastify-success'
            }).showToast();
            sessionStorage.removeItem('orderCancelled');
        }
    };
</script>


<script>
    document.getElementById('confirm-return').addEventListener('click', function () {
            const orderId = this.getAttribute('data-order-id');
            confirmReturn(orderId);
        });

  

    function confirmReturn(orderId) {

        console.log("in confirm return");
        let reason = document.getElementById("returnReason").value;
       

        if (!reason) {
            Toastify({
                text: 'Select Reason for Return',
                duration: 3000,
                gravity: 'top', 
                position: 'center',
                backgroundColor: '#ffa500',
                className: 'toastify-info'
            }).showToast();
            return;
        }

        fetch('/return-order', {
                    method: 'POST',
                    body: JSON.stringify({ orderId: orderId, reason: reason }),
                    headers: {
                        'Content-Type': 'application/json',
                    }
                }).then(response => {
                    console.log("Order return db and response came");
                    if (response.ok) {
                        sessionStorage.setItem('orderReturned', 'true');
                        window.location.reload();
                    } else if (response.status === 404 || response.status === 405) {
                        Toastify({
                            text: 'Missing orderId details.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'center',
                            backgroundColor: 'red',
                            className: 'toastify-error'
                        }).showToast();
                    } else if (response.status === 406) {
                        Toastify({
                            text: 'Missing order return reason.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'center',
                            backgroundColor: 'red',
                            className: 'toastify-error'
                        }).showToast();
                    } else {
                        Toastify({
                            text: 'Order Return Failed',
                            duration: 3000,
                            gravity: 'top',
                            position: 'center',
                            backgroundColor: 'red',
                            className: 'toastify-error'
                        }).showToast();
                    }
                });

                closereturnPopup();
            }
        </script>

        <script>
            window.onload = function () {
                if (sessionStorage.getItem('orderReturned')) {
                    Toastify({
                        text: 'Order Returned',
                        duration: 2000,
                        gravity: 'top',
                        position: 'center',
                        backgroundColor: 'orange',
                        className: 'toastify-success'
                    }).showToast();
                    sessionStorage.removeItem('orderReturned');
                }
            };
        </script>

<script>
    function checkReturnReason() {
        var selectElement = document.getElementById("returnReason");
       
    }
</script>



<script>
    function generateInvoice(orderId) {
        fetch(`/generateInvoice?orderID=${orderId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to generate invoice');
                }
                return response.blob();
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `invoice_${orderId}.pdf`;
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
            })
            .catch(error => {
                console.error('Error generating invoice:', error);
                // Handle error
            });
    }
</script>




<script>
    async function completePayment(orderID) {
        try {
            const response = await fetch('/completePayment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderID }),
            });

            // if (!response.ok) {
            //     throw new Error('Network response was not ok');
            // }

            const res = await response.json();

            console.log("Server Response:", res);

            if (res.success) {
                const options = {
                    "key": res.key_id,
                    "amount": res.amount,
                    "currency": "INR",
                    "name": res.name,
                    "description": res.msg,
                    "image": "https://dummyimage.com/600x400/000/fff",
                    "order_id": res.order_id,
                    "handler": function (response) {
                      window.location.href = `/completePayment?orderID=${orderID}`;

                    },
                    "prefill": {
                        "contact": res.contact,
                        "name": res.name,
                        "email": res.email
                    },
                    "notes": {
                        "description": res.description
                    },
                    "theme": {
                        "color": "#2300a3"
                    }
                };

                 var razorpayObject = new Razorpay(options);

                razorpayObject.open();

                razorpayObject.on('payment.failed', function (response) {
                    razorpayObject.close();


                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Payment Failed',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 4000,
                        timerProgressBar: true,
                    });
                });
            } else {
                if (res.redirectURL) {
                    window.location.href = res.redirectURL;
                } else if (response.status === 401) {
                    // Handle insufficient stock error
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: res.error
                    });
                }else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Payment failed...................',
                    });
                    console.error(res);
                }
            }
        } catch (error) {
            console.error('Error during order logging:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Payment failed////////////',
            });
        }
    }
</script>

<script>
    var popupLink = document.getElementById("invoicePopup");
    var popupWindow = document.getElementById("invoicePopup-window");
    var closeButton = document.getElementById("previewClose");
    popupLink.addEventListener("click", function (event) {
        event.preventDefault();
        popupWindow.style.display = "block";
    });
    function closePopup() {
        popupWindow.style.display = "none";
    };
</script>

<script>
    const currentDate = new Date();

    const formattedDate = currentDate.toLocaleDateString('en-US');

    document.getElementById('currentDate').textContent = formattedDate;
</script>

<script>
    function invoicePDF() {
        if (typeof jsPDF !== 'undefined') {
            const content = document.getElementById('invoice_download');;
            html2canvas(content).then(canvas => {
                const imgData = canvas.toDataURL('image/png');
                const pdf = new jsPDF();
                const imgWidth = 200;
                const imgHeight = (canvas.height * imgWidth) / canvas.width;
                pdf.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);
                pdf.save('invoice.pdf');
            })
        } else {
            console.error('jsPDF library is not available');
        }
    }

    document.getElementById('invoiceDownload').addEventListener('click', function () {
        invoicePDF();
    });

</script>




</body>




</html>
        
        
        </body>
        </html>